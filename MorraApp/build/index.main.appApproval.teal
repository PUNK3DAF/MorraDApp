#pragma version 8
// resource: R_Txn
txn ApplicationID
bz alloc
byte base64()
app_global_get
dup
int 0
extract_uint64
store 1 // GV_currentStep :: UInt
int 8
extract_uint64
store 2 // GV_currentTime :: UInt
byte base64(AA==)
app_global_get
byte base64(AQ==)
app_global_get
concat
preamble:
pushbytess base64(DVgYKw==) base64(G275UA==) base64(JZhVzA==) base64(Ulb9rA==) base64(Z52eDw==) base64(dQ7kBg==) base64(hGNipQ==) base64(jNJFHw==) base64(v/rwwA==) base64(00lioQ==) base64(39kjKA==) base64(4lfE+Q==) base64(7G85Dw==) base64(8Pkd3A==) base64(/0yWvQ==)
txna ApplicationArgs 0
match _reachp_10 _reachp_5 _reachp_14 _reachp_0 _reachp_11 _reachp_2 _reachp_4 _reachp_6 _reachp_13 _reachp_15 _reachp_1 _reachp_7 _reachp_9 _reachp_12 _reachp_8
errl:
err
_reachi_0:
txn Sender
store 16 // Andrew/465
load 11 // v1011
int 0
extract_uint64
store 12 // v1010
load 11 // v1011
int 8
extract_uint64
store 20 // wager/466
byte base64(rNEfww==)
load 12 // v1010
itob
concat
load 20 // wager/466
itob
concat
log // up to 20 bytes
// ^ log: "_reach_e0" [v1010,wager/466] "_reach_e0(uint64,uint64)"
load 12 // v1010
callsub l2_LF_timeCheck
load 20 // wager/466
callsub l3_LF_checkTxn_False
// ^ CheckPay
// at ./index.rsh:94:5:dot
global Round
int 30
+
store 13 // v477
l4_LF_svsDump_1:
load 16 // Andrew/465
load 20 // wager/466
itob
concat
load 13 // v477
itob
concat
int 120
bzero
concat
int 1
global Round
updateStateNoOp:
store 2 // GV_currentTime :: UInt
store 1 // GV_currentStep :: UInt
byte base64(AA==)
dig 1
extract 0 127
app_global_put
byte base64(AQ==)
swap
extract 127 41
app_global_put
byte base64()
load 1 // GV_currentStep :: UInt
itob
load 2 // GV_currentTime :: UInt
itob
concat
app_global_put
txn OnCompletion
int NoOp
==
assert
// checked on completion
callsub l22_LF_updateMbr
updateState:
load 3 // GV_wasntMeth :: Bool
bnz done
apiReturn_noCheck:
byte base64(FR98dQ==)
load 4 // GV_apiRet :: Null
concat
log // up to 4 bytes
done:
int 1
return
_reachi_1:
txn Sender
store 15 // Blake/481
int 1
load 1 // GV_currentStep :: UInt
==
assert
callsub l5_LF_svsLoad_1
load 11 // v1014
btoi
store 12 // v1013
byte base64(1RUZFA==)
load 12 // v1013
itob
concat
log // up to 12 bytes
// ^ log: "_reach_e1" [v1013] "_reach_e1(uint64)"
load 12 // v1013
callsub l2_LF_timeCheck
global Round
load 13 // v477
<
assert
load 20 // wager/466
callsub l3_LF_checkTxn_False
// ^ CheckPay
// at ./index.rsh:100:5:dot
int 1
global Round
load 20 // wager/466
dup
+
store 14 // netBalance/494
store 22 // thisConsensusTime/487
store 23 // outcome/486
_reachl_3:
load 23 // outcome/486
int 1
==
bz l20_ifF
load 22 // thisConsensusTime/487
int 30
+
store 13 // v509
l21_LF_svsDump_5:
load 16 // Andrew/465
load 20 // wager/466
itob
concat
load 15 // Blake/481
concat
load 14 // netBalance/494
itob
concat
load 13 // v509
itob
concat
int 80
bzero
concat
int 5
global Round
b updateStateNoOp
_reachi_10:
int 11
load 1 // GV_currentStep :: UInt
==
assert
callsub l6_LF_svsLoad_11
load 11 // v1038
int 0
extract_uint64
store 12 // v1037
load 11 // v1038
int 8
extract_uint64
store 13 // saltA/568
load 11 // v1038
int 16
extract_uint64
store 17 // handA/569
byte base64(9Mthig==)
load 12 // v1037
itob
concat
load 13 // saltA/568
itob
concat
load 17 // handA/569
itob
concat
log // up to 28 bytes
// ^ log: "_reach_e10" [v1037,saltA/568,handA/569] "_reach_e10(uint64,uint64,uint64)"
load 12 // v1037
callsub l2_LF_timeCheck
global Round
load 21 // v563
<
assert
load 16 // Andrew/465
txn Sender
==
assert
// ^ Claim: sender correct
// at ./index.rsh:154:7:dot
load 22 // commitA/522
load 13 // saltA/568
itob
load 17 // handA/569
itob
concat
sha256
==
assert
// ^ Claim
// at reach standard library:69:17:application
// at ./index.rsh:159:20:application call to "checkCommitment" (defined at: reach standard library:68:8:function exp)
global Round
int 30
+
store 22 // v581
l7_LF_svsDump_13:
load 16 // Andrew/465
load 20 // wager/466
itob
concat
load 15 // Blake/481
concat
load 14 // netBalance/494
itob
concat
load 23 // guessCommitA/535
concat
load 19 // handB/552
itob
concat
load 18 // guessB/553
itob
concat
load 17 // handA/569
itob
concat
load 22 // v581
itob
concat
int 24
bzero
concat
int 13
global Round
b updateStateNoOp
_reachi_11:
int 11
load 1 // GV_currentStep :: UInt
==
assert
callsub l6_LF_svsLoad_11
load 11 // v1041
btoi
store 12 // v1040
byte base64(ECMi/w==)
load 12 // v1040
itob
concat
log // up to 12 bytes
// ^ log: "_reach_e11" [v1040] "_reach_e11(uint64)"
load 12 // v1040
callsub l2_LF_timeCheck
global Round
load 21 // v563
>=
assert
load 16 // Andrew/465
txn Sender
==
load 15 // Blake/481
txn Sender
==
||
assert
// ^ Claim: sender correct
// at reach standard library:197:11:dot
// at ./index.rsh:156:20:application call to "closeTo" (defined at: reach standard library:195:8:function exp)
load 14 // netBalance/494
// resource: R_Account
load 15 // Blake/481
callsub l8_LF_makeTxn_False_False_False_True
updateStateHalt:
txn OnCompletion
int DeleteApplication
==
assert
// checked on completion
callsub l22_LF_updateMbr
// resource: R_Account
int 0
global CurrentApplicationAddress
global CreatorAddress
callsub l23_LF_makeTxn_False_True_False_True
b updateState
_reachi_12:
int 13
load 1 // GV_currentStep :: UInt
==
assert
callsub l9_LF_svsLoad_13
load 11 // v1044
int 0
extract_uint64
store 13 // v1043
load 11 // v1044
int 8
extract_uint64
store 21 // guessSaltA/584
load 11 // v1044
int 16
extract_uint64
store 12 // guessA/585
byte base64(yf4l5g==)
load 13 // v1043
itob
concat
load 21 // guessSaltA/584
itob
concat
load 12 // guessA/585
itob
concat
log // up to 28 bytes
// ^ log: "_reach_e12" [v1043,guessSaltA/584,guessA/585] "_reach_e12(uint64,uint64,uint64)"
load 13 // v1043
callsub l2_LF_timeCheck
global Round
load 22 // v581
<
assert
load 16 // Andrew/465
txn Sender
==
assert
// ^ Claim: sender correct
// at ./index.rsh:162:7:dot
load 23 // guessCommitA/535
load 21 // guessSaltA/584
itob
load 12 // guessA/585
itob
concat
sha256
==
assert
// ^ Claim
// at reach standard library:69:17:application
// at ./index.rsh:166:20:application call to "checkCommitment" (defined at: reach standard library:68:8:function exp)
global Round
int 30
+
store 13 // v597
l10_LF_svsDump_15:
load 16 // Andrew/465
load 20 // wager/466
itob
concat
load 15 // Blake/481
concat
load 14 // netBalance/494
itob
concat
load 19 // handB/552
itob
concat
load 18 // guessB/553
itob
concat
load 17 // handA/569
itob
concat
load 12 // guessA/585
itob
concat
load 13 // v597
itob
concat
int 48
bzero
concat
int 15
global Round
b updateStateNoOp
_reachi_13:
int 13
load 1 // GV_currentStep :: UInt
==
assert
callsub l9_LF_svsLoad_13
load 11 // v1047
btoi
store 12 // v1046
byte base64(+HT3bg==)
load 12 // v1046
itob
concat
log // up to 12 bytes
// ^ log: "_reach_e13" [v1046] "_reach_e13(uint64)"
load 12 // v1046
callsub l2_LF_timeCheck
global Round
load 22 // v581
>=
assert
load 16 // Andrew/465
txn Sender
==
load 15 // Blake/481
txn Sender
==
||
assert
// ^ Claim: sender correct
// at reach standard library:197:11:dot
// at ./index.rsh:164:20:application call to "closeTo" (defined at: reach standard library:195:8:function exp)
load 14 // netBalance/494
// resource: R_Account
load 15 // Blake/481
callsub l8_LF_makeTxn_False_False_False_True
b updateStateHalt
_reachi_14:
int 15
load 1 // GV_currentStep :: UInt
==
assert
callsub l11_LF_svsLoad_15
load 11 // v1050
int 0
extract_uint64
store 21 // v1049
byte base64(va7n1Q==)
load 21 // v1049
itob
concat
load 11 // v1050
extract 8 8
concat
log // up to 20 bytes
// ^ log: "_reach_e14" [v1049,WinningNumber/603] "_reach_e14(uint64,uint64)"
load 21 // v1049
callsub l2_LF_timeCheck
global Round
load 13 // v597
<
assert
load 16 // Andrew/465
txn Sender
==
assert
// ^ Claim: sender correct
// at ./index.rsh:177:7:dot
load 12 // guessA/585
load 18 // guessB/553
==
bz l12_localIfF
int 1
store 13 // outcome/607
l13_localIfK:
load 13 // outcome/607
global Round
store 22 // thisConsensusTime/487
store 23 // outcome/486
b _reachl_3
_reachi_15:
int 15
load 1 // GV_currentStep :: UInt
==
assert
callsub l11_LF_svsLoad_15
load 11 // v1053
btoi
store 12 // v1052
byte base64(0scRyg==)
load 12 // v1052
itob
concat
log // up to 12 bytes
// ^ log: "_reach_e15" [v1052] "_reach_e15(uint64)"
load 12 // v1052
callsub l2_LF_timeCheck
global Round
load 13 // v597
>=
assert
load 16 // Andrew/465
txn Sender
==
load 15 // Blake/481
txn Sender
==
||
assert
// ^ Claim: sender correct
// at reach standard library:197:11:dot
// at ./index.rsh:178:14:application call to "closeTo" (defined at: reach standard library:195:8:function exp)
load 14 // netBalance/494
// resource: R_Account
load 16 // Andrew/465
callsub l8_LF_makeTxn_False_False_False_True
b updateStateHalt
_reachi_2:
int 1
load 1 // GV_currentStep :: UInt
==
assert
callsub l5_LF_svsLoad_1
load 11 // v1017
btoi
store 12 // v1016
byte base64(l073Fw==)
load 12 // v1016
itob
concat
log // up to 12 bytes
// ^ log: "_reach_e2" [v1016] "_reach_e2(uint64)"
load 12 // v1016
callsub l2_LF_timeCheck
global Round
load 13 // v477
>=
assert
load 20 // wager/466
// resource: R_Account
load 16 // Andrew/465
callsub l8_LF_makeTxn_False_False_False_True
b updateStateHalt
_reachi_4:
int 5
load 1 // GV_currentStep :: UInt
==
assert
callsub l14_LF_svsLoad_5
load 11 // v1020
int 0
extract_uint64
store 12 // v1019
load 11 // v1020
extract 8 32
store 22 // commitA/522
byte base64(T287RA==)
load 12 // v1019
itob
concat
load 22 // commitA/522
concat
log // up to 44 bytes
// ^ log: "_reach_e4" [v1019,commitA/522] "_reach_e4(uint64,digest)"
load 12 // v1019
callsub l2_LF_timeCheck
global Round
load 13 // v509
<
assert
load 16 // Andrew/465
txn Sender
==
assert
// ^ Claim: sender correct
// at ./index.rsh:122:7:dot
global Round
int 30
+
store 13 // v532
l15_LF_svsDump_7:
load 16 // Andrew/465
load 20 // wager/466
itob
concat
load 15 // Blake/481
concat
load 14 // netBalance/494
itob
concat
load 22 // commitA/522
concat
load 13 // v532
itob
concat
int 48
bzero
concat
int 7
global Round
b updateStateNoOp
_reachi_5:
int 5
load 1 // GV_currentStep :: UInt
==
assert
callsub l14_LF_svsLoad_5
load 11 // v1023
btoi
store 12 // v1022
byte base64(gaqazw==)
load 12 // v1022
itob
concat
log // up to 12 bytes
// ^ log: "_reach_e5" [v1022] "_reach_e5(uint64)"
load 12 // v1022
callsub l2_LF_timeCheck
global Round
load 13 // v509
>=
assert
load 16 // Andrew/465
txn Sender
==
load 15 // Blake/481
txn Sender
==
||
assert
// ^ Claim: sender correct
// at reach standard library:197:11:dot
// at ./index.rsh:124:20:application call to "closeTo" (defined at: reach standard library:195:8:function exp)
load 14 // netBalance/494
// resource: R_Account
load 15 // Blake/481
callsub l8_LF_makeTxn_False_False_False_True
b updateStateHalt
_reachi_6:
int 7
load 1 // GV_currentStep :: UInt
==
assert
callsub l16_LF_svsLoad_7
load 11 // v1026
int 0
extract_uint64
store 12 // v1025
load 11 // v1026
extract 8 32
store 23 // guessCommitA/535
byte base64(kvMOhw==)
load 12 // v1025
itob
concat
load 23 // guessCommitA/535
concat
log // up to 44 bytes
// ^ log: "_reach_e6" [v1025,guessCommitA/535] "_reach_e6(uint64,digest)"
load 12 // v1025
callsub l2_LF_timeCheck
global Round
load 13 // v532
<
assert
load 16 // Andrew/465
txn Sender
==
assert
// ^ Claim: sender correct
// at ./index.rsh:128:7:dot
global Round
int 30
+
store 13 // v545
l17_LF_svsDump_9:
load 16 // Andrew/465
load 20 // wager/466
itob
concat
load 15 // Blake/481
concat
load 14 // netBalance/494
itob
concat
load 22 // commitA/522
concat
load 23 // guessCommitA/535
concat
load 13 // v545
itob
concat
int 16
bzero
concat
int 9
global Round
b updateStateNoOp
_reachi_7:
int 7
load 1 // GV_currentStep :: UInt
==
assert
callsub l16_LF_svsLoad_7
load 11 // v1029
btoi
store 12 // v1028
byte base64(caixow==)
load 12 // v1028
itob
concat
log // up to 12 bytes
// ^ log: "_reach_e7" [v1028] "_reach_e7(uint64)"
load 12 // v1028
callsub l2_LF_timeCheck
global Round
load 13 // v532
>=
assert
load 16 // Andrew/465
txn Sender
==
load 15 // Blake/481
txn Sender
==
||
assert
// ^ Claim: sender correct
// at reach standard library:197:11:dot
// at ./index.rsh:129:14:application call to "closeTo" (defined at: reach standard library:195:8:function exp)
load 14 // netBalance/494
// resource: R_Account
load 15 // Blake/481
callsub l8_LF_makeTxn_False_False_False_True
b updateStateHalt
_reachi_8:
int 9
load 1 // GV_currentStep :: UInt
==
assert
callsub l18_LF_svsLoad_9
load 11 // v1032
int 0
extract_uint64
store 12 // v1031
load 11 // v1032
int 8
extract_uint64
store 19 // handB/552
load 11 // v1032
int 16
extract_uint64
store 18 // guessB/553
byte base64(EoZbwA==)
load 12 // v1031
itob
concat
load 19 // handB/552
itob
concat
load 18 // guessB/553
itob
concat
log // up to 28 bytes
// ^ log: "_reach_e8" [v1031,handB/552,guessB/553] "_reach_e8(uint64,uint64,uint64)"
load 12 // v1031
callsub l2_LF_timeCheck
global Round
load 13 // v545
<
assert
load 15 // Blake/481
txn Sender
==
assert
// ^ Claim: sender correct
// at ./index.rsh:144:7:dot
global Round
int 30
+
store 21 // v563
l19_LF_svsDump_11:
load 16 // Andrew/465
load 20 // wager/466
itob
concat
load 15 // Blake/481
concat
load 14 // netBalance/494
itob
concat
load 22 // commitA/522
concat
load 23 // guessCommitA/535
concat
load 19 // handB/552
itob
concat
load 18 // guessB/553
itob
concat
load 21 // v563
itob
concat
int 11
global Round
b updateStateNoOp
_reachi_9:
int 9
load 1 // GV_currentStep :: UInt
==
assert
callsub l18_LF_svsLoad_9
load 11 // v1035
btoi
store 12 // v1034
byte base64(Y1dRXA==)
load 12 // v1034
itob
concat
log // up to 12 bytes
// ^ log: "_reach_e9" [v1034] "_reach_e9(uint64)"
load 12 // v1034
callsub l2_LF_timeCheck
global Round
load 13 // v545
>=
assert
load 16 // Andrew/465
txn Sender
==
load 15 // Blake/481
txn Sender
==
||
assert
// ^ Claim: sender correct
// at reach standard library:197:11:dot
// at ./index.rsh:145:14:application call to "closeTo" (defined at: reach standard library:195:8:function exp)
load 14 // netBalance/494
// resource: R_Account
load 16 // Andrew/465
callsub l8_LF_makeTxn_False_False_False_True
b updateStateHalt
_reachp_0:
callsub l0_LF_wasntMeth
int 100000
l1_LF_mbrAdd:
load 6 // GV_mbrAdd :: UInt
+
store 6 // GV_mbrAdd :: UInt
txna ApplicationArgs 1
store 11 // v1011
b _reachi_0
_reachp_1:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v1014
b _reachi_1
_reachp_10:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v1038
b _reachi_10
_reachp_11:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v1041
b _reachi_11
_reachp_12:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v1044
b _reachi_12
_reachp_13:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v1047
b _reachi_13
_reachp_14:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v1050
b _reachi_14
_reachp_15:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v1053
b _reachi_15
_reachp_2:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v1017
b _reachi_2
_reachp_4:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v1020
b _reachi_4
_reachp_5:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v1023
b _reachi_5
_reachp_6:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v1026
b _reachi_6
_reachp_7:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v1029
b _reachi_7
_reachp_8:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v1032
b _reachi_8
_reachp_9:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v1035
b _reachi_9
alloc:
int 0
txn GlobalNumUint
==
assert
int 3
txn GlobalNumByteSlice
==
assert
int 0
txn LocalNumUint
==
assert
int 0
txn LocalNumByteSlice
==
assert
callsub l0_LF_wasntMeth
int 168
bzero
int 0
int 0
b updateStateNoOp
apiReturn_check:
txn OnCompletion
int NoOp
==
assert
// checked on completion
b apiReturn_noCheck
l12_localIfF:
load 17 // handA/569
load 19 // handB/552
+
store 11 // v609
int 1
int 0
load 11 // v609
load 18 // guessB/553
==
select
int 2
load 11 // v609
load 12 // guessA/585
==
select
store 13 // outcome/607
b l13_localIfK
l20_ifF:
int 2
load 20 // wager/466
*
// resource: R_Account
load 15 // Blake/481
load 16 // Andrew/465
load 23 // outcome/486
int 2
==
select
callsub l8_LF_makeTxn_False_False_False_True
b updateStateHalt
l24_LF_makeTxnK_False_True:
int 0
itxn_field Fee
int pay
itxn_field TypeEnum
itxn_field Receiver
itxn_field Amount
itxn_submit
retsub
updateMbr_eq:
pop
retsub
updateMbr_neg:
swap
-
dup
store 6 // GV_mbrAdd :: UInt
global CreatorAddress
callsub l8_LF_makeTxn_False_False_False_True
retsub
updateMbr_pos_eq:
-
dup
bz updateMbr_eq
dup
store 6 // GV_mbrAdd :: UInt
callsub l3_LF_checkTxn_False
retsub
l0_LF_wasntMeth:
int 1
store 3 // GV_wasntMeth :: Bool
retsub
l2_LF_timeCheck:
dup
int 0
==
swap
load 2 // GV_currentTime :: UInt
==
||
assert
retsub
l8_LF_makeTxn_False_False_False_True:
itxn_begin
b l24_LF_makeTxnK_False_True
l3_LF_checkTxn_False:
// resource: R_Txn
txn GroupIndex
load 0 // GV_txnCounter :: UInt
int 1
+
dup
store 0 // GV_txnCounter :: UInt
-
dupn 2
gtxns Receiver
global CurrentApplicationAddress
==
assert
gtxns TypeEnum
int pay
==
assert
gtxns Amount
==
assert
retsub
l9_LF_svsLoad_13:
dup
extract 0 32
store 16 // Andrew/465
dup
int 32
extract_uint64
store 20 // wager/466
dup
extract 40 32
store 15 // Blake/481
dup
int 72
extract_uint64
store 14 // netBalance/494
dup
extract 80 32
store 23 // guessCommitA/535
dup
int 112
extract_uint64
store 19 // handB/552
dup
int 120
extract_uint64
store 18 // guessB/553
dup
int 128
extract_uint64
store 17 // handA/569
int 136
extract_uint64
store 22 // v581
retsub
l6_LF_svsLoad_11:
dup
extract 0 32
store 16 // Andrew/465
dup
int 32
extract_uint64
store 20 // wager/466
dup
extract 40 32
store 15 // Blake/481
dup
int 72
extract_uint64
store 14 // netBalance/494
dup
extract 80 32
store 22 // commitA/522
dup
extract 112 32
store 23 // guessCommitA/535
dup
int 144
extract_uint64
store 19 // handB/552
dup
int 152
extract_uint64
store 18 // guessB/553
int 160
extract_uint64
store 21 // v563
retsub
l5_LF_svsLoad_1:
dup
extract 0 32
store 16 // Andrew/465
dup
int 32
extract_uint64
store 20 // wager/466
int 40
extract_uint64
store 13 // v477
retsub
l22_LF_updateMbr:
load 6 // GV_mbrAdd :: UInt
load 7 // GV_mbrSub :: UInt
dup2
>=
bz updateMbr_neg
b updateMbr_pos_eq
l18_LF_svsLoad_9:
dup
extract 0 32
store 16 // Andrew/465
dup
int 32
extract_uint64
store 20 // wager/466
dup
extract 40 32
store 15 // Blake/481
dup
int 72
extract_uint64
store 14 // netBalance/494
dup
extract 80 32
store 22 // commitA/522
dup
extract 112 32
store 23 // guessCommitA/535
int 144
extract_uint64
store 13 // v545
retsub
l16_LF_svsLoad_7:
dup
extract 0 32
store 16 // Andrew/465
dup
int 32
extract_uint64
store 20 // wager/466
dup
extract 40 32
store 15 // Blake/481
dup
int 72
extract_uint64
store 14 // netBalance/494
dup
extract 80 32
store 22 // commitA/522
int 112
extract_uint64
store 13 // v532
retsub
l14_LF_svsLoad_5:
dup
extract 0 32
store 16 // Andrew/465
dup
int 32
extract_uint64
store 20 // wager/466
dup
extract 40 32
store 15 // Blake/481
dup
int 72
extract_uint64
store 14 // netBalance/494
int 80
extract_uint64
store 13 // v509
retsub
l11_LF_svsLoad_15:
dup
extract 0 32
store 16 // Andrew/465
dup
int 32
extract_uint64
store 20 // wager/466
dup
extract 40 32
store 15 // Blake/481
dup
int 72
extract_uint64
store 14 // netBalance/494
dup
int 80
extract_uint64
store 19 // handB/552
dup
int 88
extract_uint64
store 18 // guessB/553
dup
int 96
extract_uint64
store 17 // handA/569
dup
int 104
extract_uint64
store 12 // guessA/585
int 112
extract_uint64
store 13 // v597
retsub
l23_LF_makeTxn_False_True_False_True:
itxn_begin
itxn_field CloseRemainderTo
b l24_LF_makeTxnK_False_True
